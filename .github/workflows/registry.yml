name: registry Image CI
permissions: {}

on:
  push:
    branches:
    - 'master'
    paths:
    - '.github/workflows/registry.yml'
    - 'registry/base.yaml'
    - 'registry/Dockerfile'
  schedule:
  - cron: "10 3 1-31/10 * *"
  workflow_dispatch:

env:
  REGISTRY_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/registry

jobs:
  build-registry-base:
    name: Build registry-base
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build registry-base
        shell: bash
        env:
          REGISTRY_IMAGE: ${{ env.REGISTRY_IMAGE }}
        run: |
          curl() { $(type -P curl) -LRq --retry 5 --retry-delay 10 --retry-max-time 60 --fail "$@"; }
          curl -sS -o ./apko-installer -- 'i.jpillora.com/chainguard-dev/apko!'
          bash -x ./apko-installer
          apko publish ./registry/base.yaml "${REGISTRY_IMAGE}:base"

  registry:
    runs-on: ubuntu-24.04
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      -
        name: Login to Docker Hub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and load the latest variant to local daemon
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: "{{defaultContext}}:registry"
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true
          tags: ${{ env.REGISTRY_IMAGE }}:latest
      -
        name: Smoke Test
        env:
          registry_repo: ${{ env.REGISTRY_IMAGE }}
        run: |
          docker save -o "registry.tar" "${registry_repo}:latest"
      -
        name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: "{{defaultContext}}:registry"
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.REGISTRY_IMAGE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      -
        name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:latest \
              | grep -Po '[^ \r\n\t\v]+@sha256:[a-z0-9]+' | xargs -r -t -n 1 docker buildx imagetools inspect --raw
      -
        name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        with:
          input: "registry.tar"
          format: 'table'
