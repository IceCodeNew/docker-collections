name: Builder Image
permissions: {}

on:
  push:
    branches:
    - 'release'
    paths:
    - '.github/workflows/image-builder.yml'
    - 'image-builder/*.Dockerfile'
  workflow_dispatch:

env:
  REGISTRY_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/image-builder

jobs:
  aws-lc:
    runs-on: ${{ matrix.platform == 'linux/arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      -
        name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push by digest
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: "{{defaultContext}}:image-builder"
          file: "./aws-lc.Dockerfile"
          push: true
          platforms: ${{ matrix.platform }}
          build-args: |
            CFLAGS=  -O2 -Wall -Wformat -Wformat=2 -Wconversion -Wimplicit-fallthrough -Werror=format-security -Werror=implicit -Werror=incompatible-pointer-types -Werror=int-conversion -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3 -D_GLIBCXX_ASSERTIONS -fexceptions -fstrict-flex-arrays=3 -fstack-clash-protection -fstack-protector-strong -fno-delete-null-pointer-checks -fno-strict-overflow -fno-strict-aliasing -ftrivial-auto-var-init=zero ${{ matrix.platform == 'linux/arm64' && '-mbranch-protection=standard -march=armv8.2-a+crypto' || '-fcf-protection=full -march=x86-64-v2' }} -Wl,-z,nodlopen -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -Wl,--no-copy-dt-needed-entries -Wl,--icf=safe
            CXXFLAGS=-O2 -Wall -Wformat -Wformat=2 -Wconversion -Wimplicit-fallthrough -Werror=format-security -Werror=implicit -Werror=incompatible-pointer-types -Werror=int-conversion -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3 -D_GLIBCXX_ASSERTIONS -fexceptions -fstrict-flex-arrays=3 -fstack-clash-protection -fstack-protector-strong -fno-delete-null-pointer-checks -fno-strict-overflow -fno-strict-aliasing -ftrivial-auto-var-init=zero ${{ matrix.platform == 'linux/arm64' && '-mbranch-protection=standard -march=armv8.2-a+crypto' || '-fcf-protection=full -march=x86-64-v2' }} -Wl,-z,nodlopen -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -Wl,--no-copy-dt-needed-entries -Wl,--icf=safe
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}
          outputs: type=image,compression=estargz,force-compression=true,oci-mediatypes=true,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      -
        name: Export digest
        env:
          digest: ${{ steps.build.outputs.digest }}
          platform: ${{ matrix.platform }}
        run: |
          mkdir -p /tmp/aws-lc-digests/
          touch "/tmp/aws-lc-digests/${digest#sha256:}"
          echo "PLATFORM_PAIR=${platform//\//-}" >> "$GITHUB_ENV"
      -
        name: Upload digest
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: aws-lc-digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/aws-lc-digests/*
          if-no-files-found: error
          retention-days: 1

  aws-lc-multiarch:
    runs-on: ubuntu-24.04
    needs:
      - aws-lc
    steps:
      -
        name: Download digests
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: /tmp/aws-lc-digests/
          pattern: aws-lc-digests-*
          merge-multiple: true
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      -
        name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Create manifest list and push
        working-directory: /tmp/aws-lc-digests/
        env:
          REGISTRY_IMAGE: ${{ env.REGISTRY_IMAGE }}
        run: |
          # shellcheck disable=SC2046
          docker buildx imagetools create --tag "${REGISTRY_IMAGE}:aws-lc" \
              $(printf "${REGISTRY_IMAGE}@sha256:%s " *)
      -
        name: Inspect image
        env:
          REGISTRY_IMAGE: ${{ env.REGISTRY_IMAGE }}
        run: |
          docker buildx imagetools inspect "${REGISTRY_IMAGE}:aws-lc" \
              | grep -Po '[^ \r\n\t\v]+@sha256:[a-z0-9]+' | xargs -r -t -n 1 docker buildx imagetools inspect --raw

  modern-toolbox-fedora:
    runs-on: ${{ matrix.platform == 'linux/arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      -
        name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push by digest
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: "{{defaultContext}}:image-builder"
          file: "./modern-toolbox-fedora.Dockerfile"
          push: true
          platforms: ${{ matrix.platform }}
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}
          outputs: type=image,compression=estargz,force-compression=true,oci-mediatypes=true,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      -
        name: Export digest
        env:
          digest: ${{ steps.build.outputs.digest }}
          platform: ${{ matrix.platform }}
        run: |
          mkdir -p /tmp/modern-toolbox-fedora-digests/
          touch "/tmp/modern-toolbox-fedora-digests/${digest#sha256:}"
          echo "PLATFORM_PAIR=${platform//\//-}" >> "$GITHUB_ENV"
      -
        name: Upload digest
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: modern-toolbox-fedora-digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/modern-toolbox-fedora-digests/*
          if-no-files-found: error
          retention-days: 1

  modern-toolbox-fedora-multiarch:
    runs-on: ubuntu-24.04
    needs:
      - modern-toolbox-fedora
    steps:
      -
        name: Download digests
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: /tmp/modern-toolbox-fedora-digests/
          pattern: modern-toolbox-fedora-digests-*
          merge-multiple: true
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      -
        name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Create manifest list and push
        working-directory: /tmp/modern-toolbox-fedora-digests/
        env:
          REGISTRY_IMAGE: ${{ env.REGISTRY_IMAGE }}
        run: |
          # shellcheck disable=SC2046
          docker buildx imagetools create --tag "${REGISTRY_IMAGE}:modern-toolbox-fedora" \
              $(printf "${REGISTRY_IMAGE}@sha256:%s " *)
      -
        name: Inspect image
        env:
          REGISTRY_IMAGE: ${{ env.REGISTRY_IMAGE }}
        run: |
          docker buildx imagetools inspect "${REGISTRY_IMAGE}:modern-toolbox-fedora" \
              | grep -Po '[^ \r\n\t\v]+@sha256:[a-z0-9]+' | xargs -r -t -n 1 docker buildx imagetools inspect --raw
      -
        name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@dc5a429b52fcf669ce959baa2c2dd26090d2a6c4 # 0.32.0
        with:
          image-ref: "${{ env.REGISTRY_IMAGE }}:modern-toolbox-fedora"
          format: 'table'

  alpine:
    runs-on: ${{ matrix.platform == 'linux/arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      -
        name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push by digest
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: "{{defaultContext}}:image-builder"
          file: "./alpine.Dockerfile"
          push: true
          platforms: ${{ matrix.platform }}
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}
          outputs: type=image,compression=estargz,force-compression=true,oci-mediatypes=true,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      -
        name: Export digest
        env:
          digest: ${{ steps.build.outputs.digest }}
          platform: ${{ matrix.platform }}
        run: |
          mkdir -p /tmp/alpine-digests/
          touch "/tmp/alpine-digests/${digest#sha256:}"
          echo "PLATFORM_PAIR=${platform//\//-}" >> "$GITHUB_ENV"
      -
        name: Upload digest
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: alpine-digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/alpine-digests/*
          if-no-files-found: error
          retention-days: 1

  alpine-multiarch:
    runs-on: ubuntu-24.04
    needs:
      - alpine
    steps:
      -
        name: Download digests
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: /tmp/alpine-digests/
          pattern: alpine-digests-*
          merge-multiple: true
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      -
        name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Create manifest list and push
        working-directory: /tmp/alpine-digests/
        env:
          REGISTRY_IMAGE: ${{ env.REGISTRY_IMAGE }}
        run: |
          # shellcheck disable=SC2046
          docker buildx imagetools create --tag "${REGISTRY_IMAGE}:alpine" \
              $(printf "${REGISTRY_IMAGE}@sha256:%s " *)
      -
        name: Inspect image
        env:
          REGISTRY_IMAGE: ${{ env.REGISTRY_IMAGE }}
        run: |
          docker buildx imagetools inspect "${REGISTRY_IMAGE}:alpine" \
              | grep -Po '[^ \r\n\t\v]+@sha256:[a-z0-9]+' | xargs -r -t -n 1 docker buildx imagetools inspect --raw
      -
        name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@dc5a429b52fcf669ce959baa2c2dd26090d2a6c4 # 0.32.0
        with:
          image-ref: "${{ env.REGISTRY_IMAGE }}:alpine"
          format: 'table'

  endlessh:
    runs-on: ${{ matrix.platform == 'linux/arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      -
        name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push by digest
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: "{{defaultContext}}:image-builder"
          file: "./endlessh.Dockerfile"
          push: true
          platforms: ${{ matrix.platform }}
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}
          outputs: type=image,compression=estargz,force-compression=true,oci-mediatypes=true,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      -
        name: Export digest
        env:
          digest: ${{ steps.build.outputs.digest }}
          platform: ${{ matrix.platform }}
        run: |
          mkdir -p /tmp/endlessh-digests/
          touch "/tmp/endlessh-digests/${digest#sha256:}"
          echo "PLATFORM_PAIR=${platform//\//-}" >> "$GITHUB_ENV"
      -
        name: Upload digest
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: endlessh-digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/endlessh-digests/*
          if-no-files-found: error
          retention-days: 1

  endlessh-multiarch:
    runs-on: ubuntu-24.04
    needs:
      - endlessh
    steps:
      -
        name: Download digests
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: /tmp/endlessh-digests/
          pattern: endlessh-digests-*
          merge-multiple: true
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      -
        name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Create manifest list and push
        working-directory: /tmp/endlessh-digests/
        env:
          REGISTRY_IMAGE: ${{ env.REGISTRY_IMAGE }}
        run: |
          # shellcheck disable=SC2046
          docker buildx imagetools create --tag "${REGISTRY_IMAGE}:endlessh" \
              $(printf "${REGISTRY_IMAGE}@sha256:%s " *)
      -
        name: Inspect image
        env:
          REGISTRY_IMAGE: ${{ env.REGISTRY_IMAGE }}
        run: |
          docker buildx imagetools inspect "${REGISTRY_IMAGE}:endlessh" \
              | grep -Po '[^ \r\n\t\v]+@sha256:[a-z0-9]+' | xargs -r -t -n 1 docker buildx imagetools inspect --raw
      -
        name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@dc5a429b52fcf669ce959baa2c2dd26090d2a6c4 # 0.32.0
        with:
          image-ref: "${{ env.REGISTRY_IMAGE }}:endlessh"
          format: 'table'
