name: Caddy Image CI

on:
  push:
    branches:
    - 'release'
    paths:
    - '.github/workflows/caddy.yml'
    - 'caddy/**'
  workflow_dispatch:

env:
  REGISTRY_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/caddy
  CADDY_VERSION: v2.8.4

jobs:
  images:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'caddyserver/caddy'
          ref: "${{ env.CADDY_VERSION }}"
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          check-latest: true
          cache: true
          go-version: 'stable'
      - name: Set up xcaddy
        uses: engineerd/configurator@v0.0.10
        with:
          name: xcaddy
          pathInArchive: xcaddy
          fromGitHubReleases: "true"
          repo: "caddyserver/xcaddy"
          version: "latest"
          urlTemplate: "https://github.com/caddyserver/xcaddy/releases/download/{{version}}/xcaddy_{{rawVersion}}_linux_amd64.tar.gz"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        env:
          _TARGETARCH: ${{ matrix.platform }}
        run: |
          # go env -w GOFLAGS="$GOFLAGS -buildmode=pie"
          go env -w CGO_ENABLED=0
          case "$_TARGETARCH" in \
              linux/amd64) \
                  go env -w GOAMD64=v2   ;; \
              linux/arm64) \
                  # TODO: GOARM64=???
                  # needs go@1.23.x
                  go env -w  GOARCH=arm64;; \
              *) \
                  echo "unsupported architecture"; exit 1 ;; \
          esac

          # TODO: XCADDY_GO_BUILD_FLAGS="-bindnow -trimpath -ldflags '-w -s'"
          # needs: go@1.23.x
          export XCADDY_SETCAP=1
          export XCADDY_GO_BUILD_FLAGS="-trimpath -ldflags '-w -s'"
          xcaddy build \
              --with github.com/caddy-dns/cloudflare@master \
              --with github.com/mholt/caddy-l4@master \
              --with github.com/caddyserver/cache-handler \
              --output ./caddy
      - name: Install
        run: |
          sudo apt-get update \
              && sudo apt-get install -y checksec \
              && checksec --file=./caddy
          sudo mkdir -p /results/ \
              && sudo install -spvD ./caddy /results/
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          build-args: CADDY_VERSION=${{ env.CADDY_VERSION }}
          build-contexts: local-bin=/results/
          context: "{{defaultContext}}:caddy"
          push: true
          platforms: ${{ matrix.platform }}
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}
          outputs: type=image,compression=estargz,force-compression=true,oci-mediatypes=true,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      -
        name: Export digest
        run: |
          mkdir -p /tmp/caddy-digests/
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/caddy-digests/${digest#sha256:}"          

          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      -
        name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: caddy-digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/caddy-digests/*
          if-no-files-found: error
          retention-days: 1

  multiarch:
    runs-on: ubuntu-24.04
    needs:
      - images
    steps:
      -
        name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/caddy-digests/
          pattern: caddy-digests-*
          merge-multiple: true
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Create manifest list and push
        working-directory: /tmp/caddy-digests/
        run: |
          docker buildx imagetools create --tag ${{ env.REGISTRY_IMAGE }}:cfdns \
              $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)          
      -
        name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:cfdns \
              | grep -Po '[^ \r\n\t\v]+@sha256:[a-z0-9]+' | xargs -r -t -n 1 docker buildx imagetools inspect --raw
      -
        name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: "${{ env.REGISTRY_IMAGE }}:cfdns"
          format: 'table'
