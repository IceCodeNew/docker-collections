name: minideb-based images
permissions: {}

on:
  push:
    branches:
    - 'master'
    paths:
    - '.github/workflows/minideb-based.yml'
    - 'minideb-based/*.Dockerfile'
  schedule:
  - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  debian:
    runs-on: ${{ matrix.platform == 'linux/arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      -
        name: Login to Docker Hub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push by digest
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: "{{defaultContext}}:minideb-based"
          file: "./debian.Dockerfile"
          push: true
          platforms: ${{ matrix.platform }}
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}
          outputs: type=image,compression=estargz,force-compression=true,oci-mediatypes=true,name=${{ secrets.DOCKERHUB_USERNAME }}/image-builder,push-by-digest=true,name-canonical=true,push=true
      -
        name: Export digest
        env:
          digest: ${{ steps.build.outputs.digest }}
          platform: ${{ matrix.platform }}
        run: |
          mkdir -p /tmp/debian-digests/
          touch "/tmp/debian-digests/${digest#sha256:}"
          echo "PLATFORM_PAIR=${platform//\//-}" >> "$GITHUB_ENV"
      -
        name: Upload digest
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: debian-digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/debian-digests/*
          if-no-files-found: error
          retention-days: 1

  debian-multiarch:
    runs-on: ubuntu-24.04
    needs:
      - debian
    steps:
      -
        name: Download digests
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: /tmp/debian-digests/
          pattern: debian-digests-*
          merge-multiple: true
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      -
        name: Login to Docker Hub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Create manifest list and push
        working-directory: /tmp/debian-digests/
        env:
          REPOSITORY: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          # shellcheck disable=SC2046
          docker buildx imagetools create --tag "${REPOSITORY}/image-builder:debian" \
              $(printf "${REPOSITORY}/image-builder@sha256:%s " *)
      -
        name: Inspect image
        env:
          REGISTRY_IMAGE: ${{ env.REGISTRY_IMAGE }}
        run: |
          docker buildx imagetools inspect "${REPOSITORY}/image-builder:debian" \
              | grep -Po '[^ \r\n\t\v]+@sha256:[a-z0-9]+' | xargs -r -t -n 1 docker buildx imagetools inspect --raw
      -
        name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        with:
          image-ref: "${{ secrets.DOCKERHUB_USERNAME }}/image-builder:debian"
          format: 'table'

  graftcp:
    runs-on: ${{ matrix.platform == 'linux/arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      -
        name: Login to Docker Hub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Fetch latest tag of Golang
        shell: bash
        run: |
          golang_latest_tag_name=$(
              docker run --rm golang:alpine go version \
                  | grep -Po '(?<=go version go)[0-9]+\.[0-9]+\.[0-9]+'
          )
          echo "golang_latest_tag_name=${golang_latest_tag_name}" >> "$GITHUB_ENV"
      -
        name: Build and push by digest
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          build-args: GOLANG_VERSION=${{ env.golang_latest_tag_name }}
          context: "{{defaultContext}}:minideb-based"
          file: "./graftcp.Dockerfile"
          push: true
          platforms: ${{ matrix.platform }}
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}
          outputs: type=image,compression=estargz,force-compression=true,oci-mediatypes=true,name=${{ secrets.DOCKERHUB_USERNAME }}/graftcp,push-by-digest=true,name-canonical=true,push=true
      -
        name: Export digest
        env:
          digest: ${{ steps.build.outputs.digest }}
          platform: ${{ matrix.platform }}
        run: |
          mkdir -p /tmp/graftcp-digests/
          touch "/tmp/graftcp-digests/${digest#sha256:}"
          echo "PLATFORM_PAIR=${platform//\//-}" >> "$GITHUB_ENV"
      -
        name: Upload digest
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: graftcp-digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/graftcp-digests/*
          if-no-files-found: error
          retention-days: 1

  graftcp-multiarch:
    runs-on: ubuntu-24.04
    needs:
      - graftcp
    steps:
      -
        name: Download digests
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: /tmp/graftcp-digests/
          pattern: graftcp-digests-*
          merge-multiple: true
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      -
        name: Login to Docker Hub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Create manifest list and push
        working-directory: /tmp/graftcp-digests/
        env:
          REPOSITORY: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          # shellcheck disable=SC2046
          docker buildx imagetools create --tag "${REPOSITORY}/graftcp:latest" \
              $(printf "${REPOSITORY}/graftcp@sha256:%s " *)
      -
        name: Inspect image
        env:
          REGISTRY_IMAGE: ${{ env.REGISTRY_IMAGE }}
        run: |
          docker buildx imagetools inspect "${REPOSITORY}/graftcp:latest" \
              | grep -Po '[^ \r\n\t\v]+@sha256:[a-z0-9]+' | xargs -r -t -n 1 docker buildx imagetools inspect --raw

  python-nonroot:
    runs-on: ${{ matrix.platform == 'linux/arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      -
        name: Login to Docker Hub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push by digest
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: "{{defaultContext}}:minideb-based"
          file: "./python_debian-nonroot.Dockerfile"
          push: true
          platforms: ${{ matrix.platform }}
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}
          outputs: type=image,compression=estargz,force-compression=true,oci-mediatypes=true,name=${{ secrets.DOCKERHUB_USERNAME }}/python,push-by-digest=true,name-canonical=true,push=true
      -
        name: Export digest
        env:
          digest: ${{ steps.build.outputs.digest }}
          platform: ${{ matrix.platform }}
        run: |
          mkdir -p /tmp/python-nonroot-digests/
          touch "/tmp/python-nonroot-digests/${digest#sha256:}"
          echo "PLATFORM_PAIR=${platform//\//-}" >> "$GITHUB_ENV"
      -
        name: Upload digest
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: python-nonroot-digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/python-nonroot-digests/*
          if-no-files-found: error
          retention-days: 1

  python-nonroot-multiarch:
    runs-on: ubuntu-24.04
    needs:
      - python-nonroot
    steps:
      -
        name: Download digests
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: /tmp/python-nonroot-digests/
          pattern: python-nonroot-digests-*
          merge-multiple: true
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      -
        name: Login to Docker Hub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Create manifest list and push
        working-directory: /tmp/python-nonroot-digests/
        env:
          REPOSITORY: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          # shellcheck disable=SC2046
          docker buildx imagetools create --tag "${REPOSITORY}/python:debian-nonroot" \
              $(printf "${REPOSITORY}/python@sha256:%s " *)
      -
        name: Inspect image
        env:
          REGISTRY_IMAGE: ${{ env.REGISTRY_IMAGE }}
        run: |
          docker buildx imagetools inspect "${REPOSITORY}/python:debian-nonroot" \
              | grep -Po '[^ \r\n\t\v]+@sha256:[a-z0-9]+' | xargs -r -t -n 1 docker buildx imagetools inspect --raw
      -
        name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        with:
          image-ref: "${{ secrets.DOCKERHUB_USERNAME }}/python:debian-nonroot"
          format: 'table'

  python-nonroot-debian12:
    runs-on: ${{ matrix.platform == 'linux/arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      -
        name: Login to Docker Hub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push by digest
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: "{{defaultContext}}:minideb-based"
          file: "./python_debian12-nonroot.Dockerfile"
          push: true
          platforms: ${{ matrix.platform }}
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}
          outputs: type=image,compression=estargz,force-compression=true,oci-mediatypes=true,name=${{ secrets.DOCKERHUB_USERNAME }}/python,push-by-digest=true,name-canonical=true,push=true
      -
        name: Export digest
        env:
          digest: ${{ steps.build.outputs.digest }}
          platform: ${{ matrix.platform }}
        run: |
          mkdir -p /tmp/python-nonroot-debian12-digests/
          touch "/tmp/python-nonroot-debian12-digests/${digest#sha256:}"
          echo "PLATFORM_PAIR=${platform//\//-}" >> "$GITHUB_ENV"
      -
        name: Upload digest
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: python-nonroot-debian12-digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/python-nonroot-debian12-digests/*
          if-no-files-found: error
          retention-days: 1

  python-nonroot-debian12-multiarch:
    runs-on: ubuntu-24.04
    needs:
      - python-nonroot-debian12
    steps:
      -
        name: Download digests
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: /tmp/python-nonroot-debian12-digests/
          pattern: python-nonroot-debian12-digests-*
          merge-multiple: true
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      -
        name: Login to Docker Hub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Create manifest list and push
        working-directory: /tmp/python-nonroot-debian12-digests/
        env:
          REPOSITORY: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          # shellcheck disable=SC2046
          docker buildx imagetools create --tag "${REPOSITORY}/python:debian12-nonroot" \
              $(printf "${REPOSITORY}/python@sha256:%s " *)
      -
        name: Inspect image
        env:
          REGISTRY_IMAGE: ${{ env.REGISTRY_IMAGE }}
        run: |
          docker buildx imagetools inspect "${REPOSITORY}/python:debian12-nonroot" \
              | grep -Po '[^ \r\n\t\v]+@sha256:[a-z0-9]+' | xargs -r -t -n 1 docker buildx imagetools inspect --raw
      -
        name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@f9424c10c36e288d5fa79bd3dfd1aeb2d6eae808 # 0.33.0
        with:
          image-ref: "${{ secrets.DOCKERHUB_USERNAME }}/python:debian12-nonroot"
          format: 'table'
