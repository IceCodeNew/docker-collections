name: markitdown Image CI
permissions: {}

on:
  push:
    branches:
    - 'master'
    paths:
    - '.github/workflows/markitdown.yml'
    - 'markitdown/.markitdown_version'
    - 'markitdown/Dockerfile'
  schedule:
  - cron: "11 11 11 * *"
  workflow_dispatch:

env:
  markitdown_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/markitdown

jobs:
  markitdown:
    runs-on: ${{ matrix.platform == 'linux/arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      -
        name: Login to Docker Hub
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Chores (generate envs)
        id: chores
        env:
          CACHED_GITHUB_API: ${{ secrets.GH_API_BASEURL }}
        run: |
          set -e -o pipefail

          if [[ ! -s .markitdown_version ]]; then
              echo "ERROR: .markitdown_version file not found or is empty"
              exit 1
          fi
          ver_markitdown=$(tr -d '\r\n\t\f\v ' < .markitdown_version)

          echo "ver_markitdown=${ver_markitdown}" >> "$GITHUB_OUTPUT"

      -
        name: Build and push by digest
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          build-args: |
            ver_markitdown=${{ steps.chores.outputs.ver_markitdown }}
          context: "{{defaultContext}}:markitdown"
          push: true
          platforms: ${{ matrix.platform }}
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}
          outputs: type=image,compression=estargz,force-compression=true,oci-mediatypes=true,name=${{ env.markitdown_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      -
        name: Export digest
        env:
          digest: ${{ steps.build.outputs.digest }}
          platform: ${{ matrix.platform }}
        run: |
          mkdir -p /tmp/markitdown-digests/
          touch "/tmp/markitdown-digests/${digest#sha256:}"
          echo "PLATFORM_PAIR=${platform//\//-}" >> "$GITHUB_ENV"
      -
        name: Upload digest
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: markitdown-digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/markitdown-digests/*
          if-no-files-found: error
          retention-days: 1

  markitdown-multiarch:
    runs-on: ubuntu-24.04
    needs:
      - markitdown
    steps:
      -
        name: Download digests
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          path: /tmp/markitdown-digests/
          pattern: markitdown-digests-*
          merge-multiple: true
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      -
        name: Login to Docker Hub
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Create manifest list and push
        working-directory: /tmp/markitdown-digests/
        env:
          REGISTRY_IMAGE: ${{ env.markitdown_IMAGE }}
        run: |
          # shellcheck disable=SC2046
          docker buildx imagetools create --tag "${REGISTRY_IMAGE}:latest" \
              $(printf "${REGISTRY_IMAGE}@sha256:%s " *)
      -
        name: Inspect image
        env:
          REGISTRY_IMAGE: ${{ env.markitdown_IMAGE }}
        run: |
          docker buildx imagetools inspect "${REGISTRY_IMAGE}:latest" \
              | grep -Po '[^ \r\n\t\v]+@sha256:[a-z0-9]+' | xargs -r -t -n 1 docker buildx imagetools inspect --raw
      -
        name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        with:
          image-ref: "${{ env.markitdown_IMAGE }}:latest"
          format: 'table'
